generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                 Int               @id @default(autoincrement())
  cpf                String            @unique
  primeiroNome       String
  sobrenome          String
  email              String            @unique
  senha              String
  telefone           String?
  imagemPerfil       String?
  endereco           Endereco?
  vendedor           Vendedor?
  comprador          Comprador?
  mensagensEnviadas  Mensagem[]        @relation("MensagensEnviadas")
  mensagensRecebidas Mensagem[]        @relation("MensagensRecebidas")
  favoritos          ProdutoFavorito[]
}

model Endereco {
  id          Int     @id @default(autoincrement())
  cep         String
  logradouro  String
  numero      String
  complemento String?
  bairro      String
  cidade      String
  estado      String
  usuario     Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId   Int     @unique
}

model Vendedor {
  id        Int       @id @default(autoincrement())
  usuario   Usuario   @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  usuarioId Int       @unique
  produtos  Produto[]
}

model Comprador {
  id        Int       @id @default(autoincrement())
  usuario   Usuario   @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  usuarioId Int       @unique
  carrinho  Carrinho?
  compras   Compra[]
}

model Produto {
  id          Int                 @id @default(autoincrement())
  nome        String
  descricao   String
  valor       Decimal             @db.Money
  quantidade  Int
  categoria   Categoria           @relation(fields: [categoriaId], references: [id])
  categoriaId Int
  vendedor    Vendedor            @relation(fields: [vendedorId], references: [id])
  vendedorId  Int
  carrinhos   ProdutoNoCarrinho[]
  favoritos   ProdutoFavorito[]
}

model Categoria {
  id       Int       @id @default(autoincrement())
  nome     String    @unique
  produtos Produto[]
}

model Carrinho {
  id          Int                 @id @default(autoincrement())
  comprador   Comprador           @relation(fields: [compradorId], references: [id])
  compradorId Int                 @unique
  produtos    ProdutoNoCarrinho[]
  precoTotal  Float
  compras     Compra[]
  quantidade  Int
}

model ProdutoNoCarrinho {
  carrinho   Carrinho @relation(fields: [carrinhoId], references: [id])
  carrinhoId Int
  produto    Produto  @relation(fields: [produtoId], references: [id])
  produtoId  Int
  quantidade Int

  @@id([carrinhoId, produtoId])
}

model Compra {
  id          Int       @id @default(autoincrement())
  comprador   Comprador @relation(fields: [compradorId], references: [id])
  compradorId Int
  carrinho    Carrinho  @relation(fields: [carrinhoId], references: [id])
  carrinhoId  Int
  dataCompra  DateTime  @default(now())
  valorTotal  Float
}

model Mensagem {
  id             Int      @id @default(autoincrement())
  conteudo       String
  remetente      Usuario  @relation("MensagensEnviadas", fields: [remetenteId], references: [id])
  remetenteId    Int
  destinatario   Usuario  @relation("MensagensRecebidas", fields: [destinatarioId], references: [id])
  destinatarioId Int
  dataEnvio      DateTime @default(now())
}

model ProdutoFavorito {
  id        Int     @id @default(autoincrement())
  usuario   Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  usuarioId Int
  produto   Produto @relation(fields: [produtoId], references: [id], onDelete: Cascade)
  produtoId Int

  @@unique([usuarioId, produtoId])
}
